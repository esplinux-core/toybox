--- toybox-0.8.1-bak/scripts/genconfig.sh
+++ toybox-0.8.1/scripts/genconfig.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/mksh
 
 # This has to be a separate file from scripts/make.sh so it can be called
 # before menuconfig.  (It's called again from scripts/make.sh just to be sure.)
--- toybox-0.8.1-bak/scripts/make.sh
+++ toybox-0.8.1/scripts/make.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/mksh
 
 # Grab default values for $CFLAGS and such.
 
@@ -12,7 +12,8 @@
 UNSTRIPPED="generated/unstripped/$(basename "$OUTNAME")"
 
 # Try to keep one more cc invocation going than we have processors
-[ -z "$CPUS" ] && CPUS=$(($(nproc 2>/dev/null)+1))
+#[ -z "$CPUS" ] && CPUS=$(($(nproc 2>/dev/null)+1))
+CPUS=2
 
 # Respond to V= by echoing command lines as well as running them
 DOTPROG=
@@ -93,9 +94,9 @@
   echo '$BUILD $FILES $LINK'
 }
 
-if ! cmp -s <(genbuildsh 2>/dev/null | head -n 6 ; echo LINK="'"$LDOPTIMIZE $LDFLAGS) \
-          <(head -n 7 generated/build.sh 2>/dev/null | $SED '7s/ -o .*//')
-then
+#if ! cmp -s <(genbuildsh 2>/dev/null | head -n 6 ; echo LINK="'"$LDOPTIMIZE $LDFLAGS) \
+#          <(head -n 7 generated/build.sh 2>/dev/null | $SED '7s/ -o .*//')
+#then
   echo -n "Library probe"
 
   # We trust --as-needed to remove each library if we don't use any symbols
@@ -113,7 +114,7 @@
   done
   rm -f generated/libprobe
   echo
-fi
+#fi
 
 # LINK needs optlibs.dat, above
 
